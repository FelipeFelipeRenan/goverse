services:
  postgres:
    image: postgres:16
    container_name: goverse_postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - goverse_network
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - goverse_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - redis_data:/data
  user-service:
    build:
      context: .
      dockerfile: ./user-service/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    volumes: 
    - ./user-service/.env:/app/.env
    ports:
      - "${USER_SERVICE_PORT}:8080"
      - "50051:50051"
    networks:
      - goverse_network

  auth-service:
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    depends_on:
      - user-service
    volumes:
      - ./auth-service/.env:/app/.env
    ports:
      - "${AUTH_SERVICE_PORT}:8081"
    environment:
      - USER_SERVICE_GRPC_ADDR=user-service:8080
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - goverse_network
  
  api-gateway:
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    depends_on:
      - auth-service
      - user-service
    volumes: 
      - ./api-gateway/.env:/app/.env
    environment:
      - GATEWAY_PORT=${GATEWAY_PORT}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - goverse_network
  room-service:
    build:
      context: .
      dockerfile: ./room-service/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      user-service:
        condition: service_started
    volumes:
      - ./room-service/.env:/app/.env
    ports:
      - "${ROOM_SERVICE_PORT}:8082"
    environment:
      - ROOM_SERVICE_PORT=${ROOM_SERVICE_PORT}
      - USER_SERVICE_GRPC_ADDR=user-service:50051
    networks:
      - goverse_network

volumes:
  pgdata:
  redis_data:

networks:
  goverse_network:
    driver: bridge
